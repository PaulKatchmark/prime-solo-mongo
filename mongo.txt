1.Create a collection named orders.
db.createCollection("orders")

2.Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
db.orders.insert({orderDate: new Date(), orderTotal: 55, lineItems: [{unitPrice: 32}, {quantity: 9}, {productName: "marshmello pillow"}]})
db.orders.insert({orderDate: new Date('2016-02-02'), orderTotal: 103, lineItems: [{unitPrice: 9}, {quantity: 16}, {productName: "thrifty gifties"}]})
db.orders.insert({orderDate: new Date('2014-08-19'), orderTotal: 427, lineItems: [{unitPrice: 263}, {quantity: 832}, {productName: "edible power tools"}]})

3.Find a single order document, any order document.
db.orders.find({orderDate: {$lt: new Date('2015-01-01')}}).pretty()

4.Find all orders and make them look pretty.
db.orders.find().pretty()


5.Find all orders with an orderDate that is prior to 1/1/2016.
db.orders.find({orderDate: {$lt: new Date('2016-01-01')}}).pretty()

6.Find all orders with an orderDate that is after 1/1/2016.
db.orders.find({orderDate: {$gt: new Date('2016-01-01')}}).pretty()

7.Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.
db.orders.find({$and: [{"lineItems.quantity": {$lt: 50}},{"lineItems.quantity":{$gt: 5}}]})


8.Update one of your line items to 42.99. HINT: Look at dot notation
db.orders.update({"lineItems.productName":/edible power tools/ }, {$set:{"lineItems.$.unitPrice":42.99}})

9.Remove one of your orders.
db.orders.remove({orderTotal: 55})
